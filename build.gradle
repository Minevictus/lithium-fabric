plugins {
    id 'fabric-loom' version '0.4-SNAPSHOT'
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = "${project.archives_base_name}-mc${project.minecraft_version}"
group = project.maven_group
version = project.mod_version

def build_release = System.getenv("BUILD_RELEASE") == "true"
def build_id = System.getenv("BUILD_ID")

if (!build_release) {
    version += "-SNAPSHOT"
}

if (build_id != null) {
    version += "+build.${build_id}"
}

minecraft {
    accessWidener = file("src/main/resources/lithium.accesswidener")
    refmapName = "mixins.lithium.refmap.json"
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"

		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
    from "LICENSE"
}

jar {
    from "LICENSE"
}

def cf_api_token = System.getenv("CF_API_TOKEN")

curseforge {
    // If the environment variable does not exist, simply pass an empty string to prevent an error during init
    apiKey cf_api_token == null ? "" : cf_api_token

    project {
        id = project.cf_project_id
        releaseType = 'beta'

        addGameVersion project.cf_game_version

        def displayNameBase = "${project.cf_project_name} mc${project.minecraft_version}-${project.version}"

        mainArtifact(jar) {
            displayName = displayNameBase
        }
    }

    options {
        javaIntegration = false
        forgeGradleIntegration = false
    }
}